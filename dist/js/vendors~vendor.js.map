{"version":3,"sources":["webpack:///./node_modules/whatwg-fetch/fetch.js"],"names":["support","searchParams","self","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","prototype","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","this","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","isDataView","_bodyArrayBuffer","get","type","rejected","Error","then","text","readAsText","readBlobAsText","chars","length","i","fromCharCode","join","readArrayBufferAsText","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","Request","input","options","url","credentials","method","mode","signal","upcased","toUpperCase","normalizeMethod","referrer","form","trim","split","bytes","replace","decodeURIComponent","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","DOMException","err","message","stack","create","constructor","fetch","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","line","parts","key","parseHeaders","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill"],"mappings":"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","file":"js/vendors~vendor.js","sourcesContent":["var support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob:\n    'FileReader' in self &&\n    'Blob' in self &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nexport function Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nexport function Request(input, options) {\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':')\n    var key = parts.shift().trim()\n    if (key) {\n      var value = parts.join(':').trim()\n      headers.append(key, value)\n    }\n  })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nexport function Response(bodyInit, options) {\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = 'statusText' in options ? options.statusText : 'OK'\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nexport var DOMException = self.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nexport function fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      resolve(new Response(body, options))\n    }\n\n    xhr.onerror = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.ontimeout = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.onabort = function() {\n      reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    xhr.open(request.method, request.url, true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob'\n    }\n\n    request.headers.forEach(function(value, name) {\n      xhr.setRequestHeader(name, value)\n    })\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!self.fetch) {\n  self.fetch = fetch\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n}\n"],"sourceRoot":""}